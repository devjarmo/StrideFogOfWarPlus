namespace FogOfWarPlus
{
    shader FogOfWarLineOfSightShader : ComputeColor, ShaderBase, Texturing, PositionStream4
    {
        stream float4 ShaderPos : POSITION_WS;

        cbuffer PerMaterial
        {
            stage float Slices[360];
            stage float VisionRadius;
            stage float3 DetectorPos;
            static const float PI = 3.14159265f;
        }

        override float4 Compute() 
        {
            var angle = (round(atan2(streams.ShaderPos.z - DetectorPos.z, streams.ShaderPos.x - DetectorPos.x) 
                * (180 / PI)) + 360) % 360;

            var shaderDistance = sqrt(pow(DetectorPos.x - streams.ShaderPos.x, 2) + pow(DetectorPos.z - streams.ShaderPos.z, 2));

            if (shaderDistance >= Slices[angle]) {
                return float4(0, 0, 0, 0);
            } 

            return float4(1, 0, 0, 0);
        }
    };
}